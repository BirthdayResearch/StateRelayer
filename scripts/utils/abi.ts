export const abi = [
  { type: 'constructor', inputs: [] },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'BOT_ROLE',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'DEFAULT_ADMIN_ROLE',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'batchCallByBot',
    inputs: [{ type: 'bytes[]', name: 'funcCalls', internalType: 'bytes[]' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'uint256', name: 'fee', internalType: 'uint256' },
      { type: 'uint256', name: 'auction', internalType: 'uint256' },
      { type: 'uint256', name: 'payback', internalType: 'uint256' },
      { type: 'uint256', name: 'emission', internalType: 'uint256' },
      { type: 'uint256', name: 'total', internalType: 'uint256' },
      { type: 'uint40', name: 'decimals', internalType: 'uint40' },
    ],
    name: 'burnedInformation',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'uint256', name: '', internalType: 'uint256' },
      {
        type: 'tuple',
        name: '',
        internalType: 'struct StateRelayer.BurnedInformation',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
    ],
    name: 'getBurnedInfo',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'uint256', name: '', internalType: 'uint256' },
      { type: 'uint256', name: '', internalType: 'uint256' },
      { type: 'uint256', name: '', internalType: 'uint256' },
    ],
    name: 'getDexInfo',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'uint256', name: '', internalType: 'uint256' },
      {
        type: 'tuple',
        name: '',
        internalType: 'struct StateRelayer.DEXInfo',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
    ],
    name: 'getDexPairInfo',
    inputs: [{ type: 'string', name: 'pair', internalType: 'string' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'uint256', name: '', internalType: 'uint256' },
      {
        type: 'tuple',
        name: '',
        internalType: 'struct StateRelayer.MasterNodeInformation',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
    ],
    name: 'getMasterNodeInfo',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'getRoleAdmin',
    inputs: [{ type: 'bytes32', name: 'role', internalType: 'bytes32' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'uint256', name: '', internalType: 'uint256' },
      {
        type: 'tuple',
        name: '',
        internalType: 'struct StateRelayer.VaultGeneralInformation',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
    ],
    name: 'getVaultInfo',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'grantRole',
    inputs: [
      { type: 'bytes32', name: 'role', internalType: 'bytes32' },
      { type: 'address', name: 'account', internalType: 'address' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'hasRole',
    inputs: [
      { type: 'bytes32', name: 'role', internalType: 'bytes32' },
      { type: 'address', name: 'account', internalType: 'address' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'inBatchCallByBot',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'initialize',
    inputs: [
      { type: 'address', name: '_admin', internalType: 'address' },
      { type: 'address', name: '_bot', internalType: 'address' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'proxiableUUID',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'renounceRole',
    inputs: [
      { type: 'bytes32', name: 'role', internalType: 'bytes32' },
      { type: 'address', name: 'account', internalType: 'address' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'revokeRole',
    inputs: [
      { type: 'bytes32', name: 'role', internalType: 'bytes32' },
      { type: 'address', name: 'account', internalType: 'address' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'supportsInterface',
    inputs: [{ type: 'bytes4', name: 'interfaceId', internalType: 'bytes4' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'updateBurnInfo',
    inputs: [
      {
        type: 'tuple',
        name: '_burnedInfo',
        internalType: 'struct StateRelayer.BurnedInformation',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
    ],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'updateDEXInfo',
    inputs: [
      { type: 'string[]', name: 'dex', internalType: 'string[]' },
      {
        type: 'tuple[]',
        name: 'dexInfo',
        internalType: 'struct StateRelayer.DEXInfo[]',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
      { type: 'uint256', name: '_totalValueLocked', internalType: 'uint256' },
      { type: 'uint256', name: '_total24HVolume', internalType: 'uint256' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'updateMasterNodeInformation',
    inputs: [
      {
        type: 'tuple',
        name: '_masterNodeInformation',
        internalType: 'struct StateRelayer.MasterNodeInformation',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
    ],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'updateVaultGeneralInformation',
    inputs: [
      {
        type: 'tuple',
        name: '_vaultInfo',
        internalType: 'struct StateRelayer.VaultGeneralInformation',
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
    ],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'upgradeTo',
    inputs: [{ type: 'address', name: 'newImplementation', internalType: 'address' }],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [],
    name: 'upgradeToAndCall',
    inputs: [
      { type: 'address', name: 'newImplementation', internalType: 'address' },
      { type: 'bytes', name: 'data', internalType: 'bytes' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      { type: 'uint256', name: 'noOfVaults', internalType: 'uint256' },
      { type: 'uint256', name: 'totalLoanValue', internalType: 'uint256' },
      { type: 'uint256', name: 'totalCollateralValue', internalType: 'uint256' },
      { type: 'uint256', name: 'totalCollateralizationRatio', internalType: 'uint256' },
      { type: 'uint256', name: 'activeAuctions', internalType: 'uint256' },
      { type: 'uint40', name: 'decimals', internalType: 'uint40' },
    ],
    name: 'vaultInfo',
    inputs: [],
  },
  {
    type: 'event',
    name: 'AdminChanged',
    inputs: [
      { type: 'address', name: 'previousAdmin', indexed: false },
      { type: 'address', name: 'newAdmin', indexed: false },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BeaconUpgraded',
    inputs: [{ type: 'address', name: 'beacon', indexed: true }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Initialized',
    inputs: [{ type: 'uint8', name: 'version', indexed: false }],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleAdminChanged',
    inputs: [
      { type: 'bytes32', name: 'role', indexed: true },
      { type: 'bytes32', name: 'previousAdminRole', indexed: true },
      { type: 'bytes32', name: 'newAdminRole', indexed: true },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleGranted',
    inputs: [
      { type: 'bytes32', name: 'role', indexed: true },
      { type: 'address', name: 'account', indexed: true },
      { type: 'address', name: 'sender', indexed: true },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleRevoked',
    inputs: [
      { type: 'bytes32', name: 'role', indexed: true },
      { type: 'address', name: 'account', indexed: true },
      { type: 'address', name: 'sender', indexed: true },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'UpdateDEXInfo',
    inputs: [
      { type: 'string[]', name: 'dex', indexed: false },
      {
        type: 'tuple[]',
        name: 'dexInfo',
        indexed: false,
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
      { type: 'uint256', name: 'timeStamp', indexed: false },
      { type: 'uint256', name: 'totalValueLockInPoolPair', indexed: false },
      { type: 'uint256', name: 'total24HVolume', indexed: false },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'UpdateMasterNodeInformation',
    inputs: [
      {
        type: 'tuple',
        name: 'nodeInformation',
        indexed: false,
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
      { type: 'uint256', name: 'timeStamp', indexed: false },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'UpdateVaultGeneralInformation',
    inputs: [
      {
        type: 'tuple',
        name: 'vaultInfo',
        indexed: false,
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
      { type: 'uint256', name: 'timeStamp', indexed: false },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'UpdatedBurnedInformation',
    inputs: [
      {
        type: 'tuple',
        name: 'burnedInformation',
        indexed: false,
        components: [
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint256' },
          { type: 'uint40' },
        ],
      },
      { type: 'uint256', name: 'timeStamp', indexed: false },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Upgraded',
    inputs: [{ type: 'address', name: 'implementation', indexed: true }],
    anonymous: false,
  },
  { type: 'error', name: 'ALREADY_IN_BATCH_CALL_BY_BOT', inputs: [] },
  { type: 'error', name: 'ERROR_IN_LOW_LEVEL_CALLS', inputs: [] },
];
